// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zalando/rds-health/internal/instance (interfaces: Provider)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ec2 "github.com/aws/aws-sdk-go-v2/service/ec2"
	gomock "go.uber.org/mock/gomock"
)

// Instance is a mock of Provider interface.
type Instance struct {
	ctrl     *gomock.Controller
	recorder *InstanceMockRecorder
}

// InstanceMockRecorder is the mock recorder for Instance.
type InstanceMockRecorder struct {
	mock *Instance
}

// NewInstance creates a new mock instance.
func NewInstance(ctrl *gomock.Controller) *Instance {
	mock := &Instance{ctrl: ctrl}
	mock.recorder = &InstanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Instance) EXPECT() *InstanceMockRecorder {
	return m.recorder
}

// DescribeInstanceTypes mocks base method.
func (m *Instance) DescribeInstanceTypes(arg0 context.Context, arg1 *ec2.DescribeInstanceTypesInput, arg2 ...func(*ec2.Options)) (*ec2.DescribeInstanceTypesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeInstanceTypes", varargs...)
	ret0, _ := ret[0].(*ec2.DescribeInstanceTypesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceTypes indicates an expected call of DescribeInstanceTypes.
func (mr *InstanceMockRecorder) DescribeInstanceTypes(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceTypes", reflect.TypeOf((*Instance)(nil).DescribeInstanceTypes), varargs...)
}
