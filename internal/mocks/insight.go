// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zalando/rds-health/internal/insight (interfaces: Provider)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	pi "github.com/aws/aws-sdk-go-v2/service/pi"
	gomock "go.uber.org/mock/gomock"
)

// Insight is a mock of Provider interface.
type Insight struct {
	ctrl     *gomock.Controller
	recorder *InsightMockRecorder
}

// InsightMockRecorder is the mock recorder for Insight.
type InsightMockRecorder struct {
	mock *Insight
}

// NewInsight creates a new mock instance.
func NewInsight(ctrl *gomock.Controller) *Insight {
	mock := &Insight{ctrl: ctrl}
	mock.recorder = &InsightMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Insight) EXPECT() *InsightMockRecorder {
	return m.recorder
}

// GetResourceMetrics mocks base method.
func (m *Insight) GetResourceMetrics(arg0 context.Context, arg1 *pi.GetResourceMetricsInput, arg2 ...func(*pi.Options)) (*pi.GetResourceMetricsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceMetrics", varargs...)
	ret0, _ := ret[0].(*pi.GetResourceMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceMetrics indicates an expected call of GetResourceMetrics.
func (mr *InsightMockRecorder) GetResourceMetrics(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetrics", reflect.TypeOf((*Insight)(nil).GetResourceMetrics), varargs...)
}
